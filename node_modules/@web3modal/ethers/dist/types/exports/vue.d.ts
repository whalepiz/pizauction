import { AppKit } from '@web3modal/base';
import type { AppKitOptions } from '@web3modal/base';
import { type AdapterOptions } from '@web3modal/base/adapters/evm/ethers';
import { type Chain, type EthersStoreUtilState } from '@web3modal/scaffold-utils/ethers';
export { defaultConfig } from '@web3modal/base/adapters/evm/ethers';
type EthersAppKitOptions = Omit<AppKitOptions<Chain>, 'adapters' | 'sdkType' | 'sdkVersion'> & AdapterOptions;
export declare function createWeb3Modal(options: EthersAppKitOptions): AppKit<EthersStoreUtilState, number>;
export declare function useWeb3ModalProvider(): {
    walletProvider: import("vue").Ref<{
        request: (request: {
            method: string;
            params?: any[] | Record<string, any> | undefined;
        }) => Promise<any>;
    } | undefined>;
    walletProviderType: import("vue").Ref<"walletConnect" | "injected" | "coinbaseWallet" | "eip6963" | "w3mAuth" | "coinbaseWalletSDK" | undefined>;
};
export declare function useDisconnect(): {
    disconnect: () => Promise<void>;
};
export declare function useSwitchNetwork(): {
    switchNetwork: (chainId: number) => Promise<void>;
};
export declare function useWeb3ModalAccount(): {
    address: import("vue").Ref<string | undefined>;
    isConnected: import("vue").Ref<boolean>;
    chainId: import("vue").Ref<string | number | undefined>;
};
export declare function useWeb3ModalError(): {
    error: import("vue").Ref<unknown>;
};
export { useWeb3ModalTheme, useWeb3Modal, useWeb3ModalState, useWeb3ModalEvents, useWalletInfo } from '@web3modal/base/utils/library/vue';
